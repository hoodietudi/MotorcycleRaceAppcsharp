// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ContestProtocolV3.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Constest.Protocol {

  /// <summary>Holder for reflection information generated from ContestProtocolV3.proto</summary>
  public static partial class ContestProtocolV3Reflection {

    #region Descriptor
    /// <summary>File descriptor for ContestProtocolV3.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContestProtocolV3Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdDb250ZXN0UHJvdG9jb2xWMy5wcm90bxIRY29uc3Rlc3QucHJvdG9jb2wi",
            "KAoEVXNlchIQCgh1c2VybmFtZRgBIAEoCRIOCgZwYXNzd2QYAiABKAkiGAoI",
            "VGVhbU5hbWUSDAoEbmFtZRgBIAEoCSJRCgdSYWNlRHRvEhAKCHJhY2VOYW1l",
            "GAEgASgJEhYKDmVuZ2luZUNhcGFjaXR5GAIgASgJEhwKFG51bWJlck9mUGFy",
            "dGljaXBhbnRzGAMgASgFIj4KC1BhcnRpY2lwYW50EhcKD3BhcnRpY2lwYW50",
            "TmFtZRgBIAEoCRIWCg5lbmdpbmVDYXBhY2l0eRgCIAEoCSIwCgRSYWNlEhAK",
            "CHJhY2VOYW1lGAEgASgJEhYKDmVuZ2luZUNhcGFjaXR5GAIgASgJIusCCg5D",
            "b250ZXN0UmVxdWVzdBI0CgR0eXBlGAEgASgOMiYuY29uc3Rlc3QucHJvdG9j",
            "b2wuQ29udGVzdFJlcXVlc3QuVHlwZRIlCgR1c2VyGAIgASgLMhcuY29uc3Rl",
            "c3QucHJvdG9jb2wuVXNlchIMCgR0ZWFtGAMgASgJEhYKDmVuZ2luZUNhcGFj",
            "aXR5GAQgASgJEgwKBG5hbWUYBSABKAkSEAoIcmFjZU5hbWUYBiABKAkitQEK",
            "BFR5cGUSCgoGVW5rb3duEAASCQoFTG9naW4QARIKCgZMb2dvdXQQAhITCg9H",
            "ZXRSYWNlc1JlcXVlc3QQAxIYChRHZXRUZWFtc05hbWVzUmVxdWVzdBAEEh4K",
            "GkdldFRlYW1QYXJ0aWNpcGFudHNSZXF1ZXN0EAUSGwoXR2V0UmFjZXNCeUVu",
            "Z2luZVJlcXVlc3QQBhIeChpBZGRQYXJ0aWNpcGFudEVudHJ5UmVxdWVzdBAH",
            "It4DCg9Db250ZXN0UmVzcG9uc2USNQoEdHlwZRgBIAEoDjInLmNvbnN0ZXN0",
            "LnByb3RvY29sLkNvbnRlc3RSZXNwb25zZS5UeXBlEg0KBWVycm9yGAIgASgJ",
            "EiwKCHJhY2VzRHRvGAMgAygLMhouY29uc3Rlc3QucHJvdG9jb2wuUmFjZUR0",
            "bxISCgp0ZWFtc05hbWVzGAQgAygJEjQKDHBhcnRpY2lwYW50cxgFIAMoCzIe",
            "LmNvbnN0ZXN0LnByb3RvY29sLlBhcnRpY2lwYW50EiYKBXJhY2VzGAYgAygL",
            "MhcuY29uc3Rlc3QucHJvdG9jb2wuUmFjZRIQCghyYWNlTmFtZRgHIAEoCSLS",
            "AQoEVHlwZRILCgdVbmtub3duEAASBgoCT2sQARIJCgVFcnJvchACEhkKFVBh",
            "cnRpY2lwYW50RW50cnlBZGRlZBADEhQKEEdldFJhY2VzUmVzcG9uc2UQBBIZ",
            "ChVHZXRUZWFtc05hbWVzUmVzcG9uc2UQBRIfChtHZXRUZWFtUGFydGljaWFw",
            "bnRzUmVzcG9uc2UQBhIcChhHZXRSYWNlc0J5RW5naW5lUmVzcG9uc2UQBxIf",
            "ChtBZGRQYXJ0aWNpcGFudEVudHJ5UmVzcG9uc2UQCEI4CiRjb250ZXN0Lm5l",
            "dHdvcmtpbmcucHJvdG9idWZmcHJvdG9jb2xCEENvbnRlc3RQcm90b2J1ZnNi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Constest.Protocol.User), global::Constest.Protocol.User.Parser, new[]{ "Username", "Passwd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Constest.Protocol.TeamName), global::Constest.Protocol.TeamName.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Constest.Protocol.RaceDto), global::Constest.Protocol.RaceDto.Parser, new[]{ "RaceName", "EngineCapacity", "NumberOfParticipants" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Constest.Protocol.Participant), global::Constest.Protocol.Participant.Parser, new[]{ "ParticipantName", "EngineCapacity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Constest.Protocol.Race), global::Constest.Protocol.Race.Parser, new[]{ "RaceName", "EngineCapacity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Constest.Protocol.ContestRequest), global::Constest.Protocol.ContestRequest.Parser, new[]{ "Type", "User", "Team", "EngineCapacity", "Name", "RaceName" }, null, new[]{ typeof(global::Constest.Protocol.ContestRequest.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Constest.Protocol.ContestResponse), global::Constest.Protocol.ContestResponse.Parser, new[]{ "Type", "Error", "RacesDto", "TeamsNames", "Participants", "Races", "RaceName" }, null, new[]{ typeof(global::Constest.Protocol.ContestResponse.Types.Type) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class User : pb::IMessage<User>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Constest.Protocol.ContestProtocolV3Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      username_ = other.username_;
      passwd_ = other.passwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 2;
    private string passwd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Passwd {
      get { return passwd_; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Passwd != other.Passwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Passwd.Length != 0) hash ^= Passwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Passwd.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Passwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Passwd.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Passwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Passwd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Passwd.Length != 0) {
        Passwd = other.Passwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Passwd = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Passwd = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TeamName : pb::IMessage<TeamName>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TeamName> _parser = new pb::MessageParser<TeamName>(() => new TeamName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Constest.Protocol.ContestProtocolV3Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamName(TeamName other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamName Clone() {
      return new TeamName(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamName other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RaceDto : pb::IMessage<RaceDto>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceDto> _parser = new pb::MessageParser<RaceDto>(() => new RaceDto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaceDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Constest.Protocol.ContestProtocolV3Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceDto(RaceDto other) : this() {
      raceName_ = other.raceName_;
      engineCapacity_ = other.engineCapacity_;
      numberOfParticipants_ = other.numberOfParticipants_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceDto Clone() {
      return new RaceDto(this);
    }

    /// <summary>Field number for the "raceName" field.</summary>
    public const int RaceNameFieldNumber = 1;
    private string raceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RaceName {
      get { return raceName_; }
      set {
        raceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "engineCapacity" field.</summary>
    public const int EngineCapacityFieldNumber = 2;
    private string engineCapacity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EngineCapacity {
      get { return engineCapacity_; }
      set {
        engineCapacity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "numberOfParticipants" field.</summary>
    public const int NumberOfParticipantsFieldNumber = 3;
    private int numberOfParticipants_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumberOfParticipants {
      get { return numberOfParticipants_; }
      set {
        numberOfParticipants_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaceDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaceDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RaceName != other.RaceName) return false;
      if (EngineCapacity != other.EngineCapacity) return false;
      if (NumberOfParticipants != other.NumberOfParticipants) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RaceName.Length != 0) hash ^= RaceName.GetHashCode();
      if (EngineCapacity.Length != 0) hash ^= EngineCapacity.GetHashCode();
      if (NumberOfParticipants != 0) hash ^= NumberOfParticipants.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RaceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RaceName);
      }
      if (EngineCapacity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EngineCapacity);
      }
      if (NumberOfParticipants != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NumberOfParticipants);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RaceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RaceName);
      }
      if (EngineCapacity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EngineCapacity);
      }
      if (NumberOfParticipants != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NumberOfParticipants);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RaceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RaceName);
      }
      if (EngineCapacity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EngineCapacity);
      }
      if (NumberOfParticipants != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfParticipants);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaceDto other) {
      if (other == null) {
        return;
      }
      if (other.RaceName.Length != 0) {
        RaceName = other.RaceName;
      }
      if (other.EngineCapacity.Length != 0) {
        EngineCapacity = other.EngineCapacity;
      }
      if (other.NumberOfParticipants != 0) {
        NumberOfParticipants = other.NumberOfParticipants;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RaceName = input.ReadString();
            break;
          }
          case 18: {
            EngineCapacity = input.ReadString();
            break;
          }
          case 24: {
            NumberOfParticipants = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RaceName = input.ReadString();
            break;
          }
          case 18: {
            EngineCapacity = input.ReadString();
            break;
          }
          case 24: {
            NumberOfParticipants = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Participant : pb::IMessage<Participant>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Participant> _parser = new pb::MessageParser<Participant>(() => new Participant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Participant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Constest.Protocol.ContestProtocolV3Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Participant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Participant(Participant other) : this() {
      participantName_ = other.participantName_;
      engineCapacity_ = other.engineCapacity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Participant Clone() {
      return new Participant(this);
    }

    /// <summary>Field number for the "participantName" field.</summary>
    public const int ParticipantNameFieldNumber = 1;
    private string participantName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantName {
      get { return participantName_; }
      set {
        participantName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "engineCapacity" field.</summary>
    public const int EngineCapacityFieldNumber = 2;
    private string engineCapacity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EngineCapacity {
      get { return engineCapacity_; }
      set {
        engineCapacity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Participant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Participant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantName != other.ParticipantName) return false;
      if (EngineCapacity != other.EngineCapacity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantName.Length != 0) hash ^= ParticipantName.GetHashCode();
      if (EngineCapacity.Length != 0) hash ^= EngineCapacity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ParticipantName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantName);
      }
      if (EngineCapacity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EngineCapacity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ParticipantName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantName);
      }
      if (EngineCapacity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EngineCapacity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantName);
      }
      if (EngineCapacity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EngineCapacity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Participant other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantName.Length != 0) {
        ParticipantName = other.ParticipantName;
      }
      if (other.EngineCapacity.Length != 0) {
        EngineCapacity = other.EngineCapacity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantName = input.ReadString();
            break;
          }
          case 18: {
            EngineCapacity = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ParticipantName = input.ReadString();
            break;
          }
          case 18: {
            EngineCapacity = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Race : pb::IMessage<Race>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Race> _parser = new pb::MessageParser<Race>(() => new Race());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Race> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Constest.Protocol.ContestProtocolV3Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Race() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Race(Race other) : this() {
      raceName_ = other.raceName_;
      engineCapacity_ = other.engineCapacity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Race Clone() {
      return new Race(this);
    }

    /// <summary>Field number for the "raceName" field.</summary>
    public const int RaceNameFieldNumber = 1;
    private string raceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RaceName {
      get { return raceName_; }
      set {
        raceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "engineCapacity" field.</summary>
    public const int EngineCapacityFieldNumber = 2;
    private string engineCapacity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EngineCapacity {
      get { return engineCapacity_; }
      set {
        engineCapacity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Race);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Race other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RaceName != other.RaceName) return false;
      if (EngineCapacity != other.EngineCapacity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RaceName.Length != 0) hash ^= RaceName.GetHashCode();
      if (EngineCapacity.Length != 0) hash ^= EngineCapacity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RaceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RaceName);
      }
      if (EngineCapacity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EngineCapacity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RaceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RaceName);
      }
      if (EngineCapacity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EngineCapacity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RaceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RaceName);
      }
      if (EngineCapacity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EngineCapacity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Race other) {
      if (other == null) {
        return;
      }
      if (other.RaceName.Length != 0) {
        RaceName = other.RaceName;
      }
      if (other.EngineCapacity.Length != 0) {
        EngineCapacity = other.EngineCapacity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RaceName = input.ReadString();
            break;
          }
          case 18: {
            EngineCapacity = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RaceName = input.ReadString();
            break;
          }
          case 18: {
            EngineCapacity = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ContestRequest : pb::IMessage<ContestRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContestRequest> _parser = new pb::MessageParser<ContestRequest>(() => new ContestRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContestRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Constest.Protocol.ContestProtocolV3Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContestRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContestRequest(ContestRequest other) : this() {
      type_ = other.type_;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      team_ = other.team_;
      engineCapacity_ = other.engineCapacity_;
      name_ = other.name_;
      raceName_ = other.raceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContestRequest Clone() {
      return new ContestRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Constest.Protocol.ContestRequest.Types.Type type_ = global::Constest.Protocol.ContestRequest.Types.Type.Unkown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Constest.Protocol.ContestRequest.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Constest.Protocol.User user_;
    /// <summary>
    /// One of the following will be filled in, depending on the type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Constest.Protocol.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 3;
    private string team_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Team {
      get { return team_; }
      set {
        team_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "engineCapacity" field.</summary>
    public const int EngineCapacityFieldNumber = 4;
    private string engineCapacity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EngineCapacity {
      get { return engineCapacity_; }
      set {
        engineCapacity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "raceName" field.</summary>
    public const int RaceNameFieldNumber = 6;
    private string raceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RaceName {
      get { return raceName_; }
      set {
        raceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContestRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContestRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(User, other.User)) return false;
      if (Team != other.Team) return false;
      if (EngineCapacity != other.EngineCapacity) return false;
      if (Name != other.Name) return false;
      if (RaceName != other.RaceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Constest.Protocol.ContestRequest.Types.Type.Unkown) hash ^= Type.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (Team.Length != 0) hash ^= Team.GetHashCode();
      if (EngineCapacity.Length != 0) hash ^= EngineCapacity.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RaceName.Length != 0) hash ^= RaceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Constest.Protocol.ContestRequest.Types.Type.Unkown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (Team.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Team);
      }
      if (EngineCapacity.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EngineCapacity);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (RaceName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RaceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Constest.Protocol.ContestRequest.Types.Type.Unkown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (Team.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Team);
      }
      if (EngineCapacity.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EngineCapacity);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (RaceName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RaceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Constest.Protocol.ContestRequest.Types.Type.Unkown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (Team.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Team);
      }
      if (EngineCapacity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EngineCapacity);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RaceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RaceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContestRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Constest.Protocol.ContestRequest.Types.Type.Unkown) {
        Type = other.Type;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Constest.Protocol.User();
        }
        User.MergeFrom(other.User);
      }
      if (other.Team.Length != 0) {
        Team = other.Team;
      }
      if (other.EngineCapacity.Length != 0) {
        EngineCapacity = other.EngineCapacity;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RaceName.Length != 0) {
        RaceName = other.RaceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Constest.Protocol.ContestRequest.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::Constest.Protocol.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 26: {
            Team = input.ReadString();
            break;
          }
          case 34: {
            EngineCapacity = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            RaceName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Constest.Protocol.ContestRequest.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::Constest.Protocol.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 26: {
            Team = input.ReadString();
            break;
          }
          case 34: {
            EngineCapacity = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            RaceName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ContestRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unkown")] Unkown = 0,
        [pbr::OriginalName("Login")] Login = 1,
        [pbr::OriginalName("Logout")] Logout = 2,
        [pbr::OriginalName("GetRacesRequest")] GetRacesRequest = 3,
        [pbr::OriginalName("GetTeamsNamesRequest")] GetTeamsNamesRequest = 4,
        [pbr::OriginalName("GetTeamParticipantsRequest")] GetTeamParticipantsRequest = 5,
        [pbr::OriginalName("GetRacesByEngineRequest")] GetRacesByEngineRequest = 6,
        [pbr::OriginalName("AddParticipantEntryRequest")] AddParticipantEntryRequest = 7,
      }

    }
    #endregion

  }

  public sealed partial class ContestResponse : pb::IMessage<ContestResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContestResponse> _parser = new pb::MessageParser<ContestResponse>(() => new ContestResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContestResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Constest.Protocol.ContestProtocolV3Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContestResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContestResponse(ContestResponse other) : this() {
      type_ = other.type_;
      error_ = other.error_;
      racesDto_ = other.racesDto_.Clone();
      teamsNames_ = other.teamsNames_.Clone();
      participants_ = other.participants_.Clone();
      races_ = other.races_.Clone();
      raceName_ = other.raceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContestResponse Clone() {
      return new ContestResponse(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Constest.Protocol.ContestResponse.Types.Type type_ = global::Constest.Protocol.ContestResponse.Types.Type.Unknown;
    /// <summary>
    /// Identifies which request is filled in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Constest.Protocol.ContestResponse.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    /// <summary>
    /// One of the following will be filled in, depending on the type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "racesDto" field.</summary>
    public const int RacesDtoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Constest.Protocol.RaceDto> _repeated_racesDto_codec
        = pb::FieldCodec.ForMessage(26, global::Constest.Protocol.RaceDto.Parser);
    private readonly pbc::RepeatedField<global::Constest.Protocol.RaceDto> racesDto_ = new pbc::RepeatedField<global::Constest.Protocol.RaceDto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Constest.Protocol.RaceDto> RacesDto {
      get { return racesDto_; }
    }

    /// <summary>Field number for the "teamsNames" field.</summary>
    public const int TeamsNamesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_teamsNames_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> teamsNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TeamsNames {
      get { return teamsNames_; }
    }

    /// <summary>Field number for the "participants" field.</summary>
    public const int ParticipantsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Constest.Protocol.Participant> _repeated_participants_codec
        = pb::FieldCodec.ForMessage(42, global::Constest.Protocol.Participant.Parser);
    private readonly pbc::RepeatedField<global::Constest.Protocol.Participant> participants_ = new pbc::RepeatedField<global::Constest.Protocol.Participant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Constest.Protocol.Participant> Participants {
      get { return participants_; }
    }

    /// <summary>Field number for the "races" field.</summary>
    public const int RacesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Constest.Protocol.Race> _repeated_races_codec
        = pb::FieldCodec.ForMessage(50, global::Constest.Protocol.Race.Parser);
    private readonly pbc::RepeatedField<global::Constest.Protocol.Race> races_ = new pbc::RepeatedField<global::Constest.Protocol.Race>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Constest.Protocol.Race> Races {
      get { return races_; }
    }

    /// <summary>Field number for the "raceName" field.</summary>
    public const int RaceNameFieldNumber = 7;
    private string raceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RaceName {
      get { return raceName_; }
      set {
        raceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContestResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContestResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Error != other.Error) return false;
      if(!racesDto_.Equals(other.racesDto_)) return false;
      if(!teamsNames_.Equals(other.teamsNames_)) return false;
      if(!participants_.Equals(other.participants_)) return false;
      if(!races_.Equals(other.races_)) return false;
      if (RaceName != other.RaceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Constest.Protocol.ContestResponse.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      hash ^= racesDto_.GetHashCode();
      hash ^= teamsNames_.GetHashCode();
      hash ^= participants_.GetHashCode();
      hash ^= races_.GetHashCode();
      if (RaceName.Length != 0) hash ^= RaceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Constest.Protocol.ContestResponse.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      racesDto_.WriteTo(output, _repeated_racesDto_codec);
      teamsNames_.WriteTo(output, _repeated_teamsNames_codec);
      participants_.WriteTo(output, _repeated_participants_codec);
      races_.WriteTo(output, _repeated_races_codec);
      if (RaceName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RaceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Constest.Protocol.ContestResponse.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      racesDto_.WriteTo(ref output, _repeated_racesDto_codec);
      teamsNames_.WriteTo(ref output, _repeated_teamsNames_codec);
      participants_.WriteTo(ref output, _repeated_participants_codec);
      races_.WriteTo(ref output, _repeated_races_codec);
      if (RaceName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RaceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Constest.Protocol.ContestResponse.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      size += racesDto_.CalculateSize(_repeated_racesDto_codec);
      size += teamsNames_.CalculateSize(_repeated_teamsNames_codec);
      size += participants_.CalculateSize(_repeated_participants_codec);
      size += races_.CalculateSize(_repeated_races_codec);
      if (RaceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RaceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContestResponse other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Constest.Protocol.ContestResponse.Types.Type.Unknown) {
        Type = other.Type;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      racesDto_.Add(other.racesDto_);
      teamsNames_.Add(other.teamsNames_);
      participants_.Add(other.participants_);
      races_.Add(other.races_);
      if (other.RaceName.Length != 0) {
        RaceName = other.RaceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Constest.Protocol.ContestResponse.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            racesDto_.AddEntriesFrom(input, _repeated_racesDto_codec);
            break;
          }
          case 34: {
            teamsNames_.AddEntriesFrom(input, _repeated_teamsNames_codec);
            break;
          }
          case 42: {
            participants_.AddEntriesFrom(input, _repeated_participants_codec);
            break;
          }
          case 50: {
            races_.AddEntriesFrom(input, _repeated_races_codec);
            break;
          }
          case 58: {
            RaceName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Constest.Protocol.ContestResponse.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            racesDto_.AddEntriesFrom(ref input, _repeated_racesDto_codec);
            break;
          }
          case 34: {
            teamsNames_.AddEntriesFrom(ref input, _repeated_teamsNames_codec);
            break;
          }
          case 42: {
            participants_.AddEntriesFrom(ref input, _repeated_participants_codec);
            break;
          }
          case 50: {
            races_.AddEntriesFrom(ref input, _repeated_races_codec);
            break;
          }
          case 58: {
            RaceName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ContestResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unknown")] Unknown = 0,
        [pbr::OriginalName("Ok")] Ok = 1,
        [pbr::OriginalName("Error")] Error = 2,
        [pbr::OriginalName("ParticipantEntryAdded")] ParticipantEntryAdded = 3,
        [pbr::OriginalName("GetRacesResponse")] GetRacesResponse = 4,
        [pbr::OriginalName("GetTeamsNamesResponse")] GetTeamsNamesResponse = 5,
        [pbr::OriginalName("GetTeamParticiapntsResponse")] GetTeamParticiapntsResponse = 6,
        [pbr::OriginalName("GetRacesByEngineResponse")] GetRacesByEngineResponse = 7,
        [pbr::OriginalName("AddParticipantEntryResponse")] AddParticipantEntryResponse = 8,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
